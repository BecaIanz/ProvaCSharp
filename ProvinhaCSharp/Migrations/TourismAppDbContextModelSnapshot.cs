// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProvinhaCSharp.Models;

#nullable disable

namespace ProvinhaCSharp.Migrations
{
    [DbContext(typeof(TourismAppDbContext))]
    partial class TourismAppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AttractionsTour", b =>
                {
                    b.Property<Guid>("AttractionsID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ToursID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("AttractionsID", "ToursID");

                    b.HasIndex("ToursID");

                    b.ToTable("AttractionsTour");
                });

            modelBuilder.Entity("ProvinhaCSharp.Models.Attractions", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AttractionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Attractions");
                });

            modelBuilder.Entity("ProvinhaCSharp.Models.Tour", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("UserID");

                    b.ToTable("Tours");
                });

            modelBuilder.Entity("ProvinhaCSharp.Models.User", b =>
                {
                    b.Property<Guid>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("AttractionsTour", b =>
                {
                    b.HasOne("ProvinhaCSharp.Models.Attractions", null)
                        .WithMany()
                        .HasForeignKey("AttractionsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProvinhaCSharp.Models.Tour", null)
                        .WithMany()
                        .HasForeignKey("ToursID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProvinhaCSharp.Models.Tour", b =>
                {
                    b.HasOne("ProvinhaCSharp.Models.User", "User")
                        .WithMany("Tours")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ProvinhaCSharp.Models.User", b =>
                {
                    b.Navigation("Tours");
                });
#pragma warning restore 612, 618
        }
    }
}
